name: Publish 🐍 📦
run-name: pypi via ${{ github.event_name }}
on:
  push:
    branches:
      - "main"
      - "release/*"
    tags:
      - "v*.*.*"

  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}-pypi
  cancel-in-progress: true

jobs:
  build:
    name: Build 🐍 📦
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # so setuptools-scm can get the version

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install pypa/build
        run: python3 -m pip install --user build

      - name: Override setuptools-scm to disable local versioning
        run: |
          git update-index --assume-unchanged pyproject.toml
          echo 'local_scheme = "no-local-version"' >> pyproject.toml

      - name: Build a binary wheel and a source tarball
        run: python3 -m build -v

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-dist-${{ matrix.python }}
          path: dist/

  publish-to-testpypi:
    name: Publish 🐍 📦 to TestPyPI
    runs-on: ubuntu-latest
    needs:
      - build
    environment:
      name: testpypi
      url: https://test.pypi.org/p/neurosis
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-dist-*
          path: dist/
          merge-multiple: true

      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish 🐍 📦 to PyPI
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
      - publish-to-testpypi # Ensure that the package is published to TestPyPI first
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/neurosis
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-dist-*
          path: dist/
          merge-multiple: true

      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign 🐍 📦 with Sigstore and create GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-dist-*
          path: dist/
          merge-multiple: true

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
