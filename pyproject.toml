[project]
name = "neurosis"
authors = [
  { name = "Andi Powers-Holmes", email = "aholmes@omnom.net" },
]
description = "A neural network trainer (for weebs)"
readme = "README.md"
requires-python = ">=3.10, <3.12"
keywords = [
  "deep-learning",
  "diffusers",
  "machine-learning",
  "neural-networks",
  "pytorch-lightning",
  "pytorch",
  "stable-diffusion",
  "transformers",
]
license = { file = "LICENSE.md" }
classifiers = [
  "Programming Language :: Python :: 3",
]
dynamic = ["version"]

dependencies = [
  "accelerate >= 0.26.1",
  "bitsandbytes >= 0.42.0",
  "chardet == 5.1.0",
  "clip @ git+https://github.com/openai/CLIP.git@a1d071733d7111c9c014f024669f959182114e33#egg=clip",
  "colorama >= 0.4.3, < 0.5.0",
  "colorcet >= 3.0.1, < 4.0.0",
  "crc32c >= 2.3",
  "diffusers @ git+https://github.com/neggles/diffusers.git@asym-vae#egg=diffusers",
  "einops >= 0.6.1",
  "jsonargparse[argcomplete,fsspec,omegaconf,signatures] >= 4.27.0, < 5.0.0",
  "kornia >= 0.7.0",
  "lightning[extra] >= 2.1.3, < 2.2.0",
  "natsort >= 8.4.0",
  "ninja >= 1.11.0",
  "numpy >= 1.24.3",
  "open-clip-torch >= 2.2.0",
  "opencv-contrib-python-headless >= 4.6.0.66, < 4.7.0",
  "pandas >= 2.0.0",
  "pillow >= 10.0.0, < 11.0.0",
  "pudb >= 2022.1.3",
  "pydantic >= 2.5.0, < 2.6.0",
  "pydantic-settings >= 2.0.0, < 2.2.0",
  "rich >= 13.0.0, < 14.0.0",
  "safetensors >= 0.3.1",
  "scipy >= 1.11.1, < 1.12.0",
  "sentencepiece >= 0.1.99",
  "shellingham >= 1.5.0, < 2.0.0",
  "tensorboardx == 2.6",
  "tokenizers >= 0.13.3",
  "torch >= 2.0.0, < 2.2.0",
  "torchmetrics >= 1.3.0, < 1.4.0",
  "torchvision",
  "tqdm >= 4.65.0",
  "transformers >= 4.36.0",
  "typer >= 0.9.0, < 1.0.0",
  "wandb >= 0.16.0, < 0.17.0",
]

[project.optional-dependencies]
dev = [
  "ruff >=0.0.289",
  "setuptools-scm >= 8.0.0",
  "pre-commit >= 3.0.0",     # remember to run `pre-commit install` after installing
  "tabulate >= 0.8.9",       # for inductor log prettyprinting
]
extra = [
  "datasets >= 2.13.0",
  "hf-transfer >= 0.1.4, < 1.0.0",
  "pynvml >= 11.0.0, < 12.0.0",
  "ray[data] >= 2.7.0, < 3.0.0",
  "tensorboard",
]
mongo = [
  "pyarrow >= 13.0.0, < 14.0.0",
  "pymongoarrow >= 1.1.0, < 1.2.0",
]
multinode = [
  'torchelastic >= 0.2.2, < 0.3.0',
]
all = [
  "neurosis[dev]",
  "neurosis[extra]",
  "neurosis[mongo]",
  "neurosis[multinode]",
]

[project.scripts]
neurosis = "neurosis.trainer.cli:main"


[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "wheel", "setuptools_scm>=8"]

[tool.setuptools_scm]
write_to = "src/neurosis/_version.py"

[tool.setuptools.packages.find]
namespaces = true
where = ["src"]
include = ["neurosis*"]
exclude = ["neurosis.tests*"]

[tool.setuptools.package-data]
"*" = [
  "*.css",
  "*.json",
  "*.md",
  "*.txt",
]
"neurosis.data" = [
  "*.ckpt",
  "*.pt",
  "*.pth",
  "*.safetensors",
]


[tool.ruff]
line-length = 110
target-version = "py310"
extend-exclude = ["/usr/lib/*"]

[tool.ruff.lint]
ignore = [
  "F841", # local variable assigned but never used
  "F842", # local variable annotated but never used
  "E501", # line too long - will be fixed in format
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true
exclude = [
  "src/neurosis/_version.py", # generated by setuptools_scm
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-local-folder = ["src"]
known-first-party = ["neurosis"]


[tool.pyright]
include = ["src/**"]
exclude = ["/usr/lib/**"]
stubPath = "./typings"
